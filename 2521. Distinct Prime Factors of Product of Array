class Solution {
public:
    vector<bool> primes;
    vector<int> hp;

    void sieve(int n){
        primes.assign(n+1,true);
        hp.assign(n+1,0);
        primes[0]=primes[1]=false;

        for(int i=2;i<=n;i++){
            if(primes[i]){
                hp[i]=i;
                for(int j=i*i;j<=n;j+=i){
                    primes[j]=false;
                    hp[j]=i;
                }
            }
        }
    }
    int distinctPrimeFactors(vector<int>& nums) {
        if (nums.empty())return 0;
        unordered_set<int> v;
        int n= *max_element(nums.begin(),nums.end());
        sieve(n);

        for(int num:nums){
            while(num>1){
                int ph=hp[num];
                v.insert(ph);
                while(num%ph==0){
                    num/=ph;
                }
            }
        }
        return v.size();
    }
};
