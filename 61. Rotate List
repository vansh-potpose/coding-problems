/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL || head->next==NULL || k==0){
            return head;
        }
        ListNode * ptr =head;
        ListNode * tail;
        int count=1;
        while(ptr->next!=NULL){
            count++;
            ptr=ptr->next;
        }
        tail=ptr;
        k=k%count;
        if(k==0){
            return head;
        }
        ptr=head;
        while((count-k-1)>0){
            k++;
            ptr=ptr->next;
        }
        ListNode * ptr2=ptr->next;
        tail->next=head;
        ptr->next=NULL;

        return ptr2;
    }
};
