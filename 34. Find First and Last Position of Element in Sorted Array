class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size();
        int l = 0, r = n - 1, mid;

        int start = -1;
        while (l <= r) {
            mid = l + (r - l) / 2;
            if (nums[mid] < target) {
                l = mid + 1;
            } else if (nums[mid] > target) {
                r = mid - 1;
            } else {
                if (mid == 0 || nums[mid - 1] != target) {
                    start = mid;
                    break;
                } else {
                    r = mid - 1;
                }
            }
        }

        if (start == -1) {
            return {-1, -1};
        }

        l = 0;
        r = n - 1;
        int end = -1;
        while (l <= r) {
            mid = l + (r - l) / 2;
            if (nums[mid] < target) {
                l = mid + 1;
            } else if (nums[mid] > target) {
                r = mid - 1;
            } else {
                if (mid == n - 1 || nums[mid + 1] != target) {
                    end = mid;
                    break;
                } else {
                    l = mid + 1;
                }
            }
        }

        return {start, end};
    }
};
