class Solution {
public:
    int isSufficient(vector<int>& piles,int k){
        int ans = 0;
        for(int i=0 ; i<piles.size() ; i++)
        {
           ans += (piles[i]+k-1)/k;

        }
        return ans;

    }

    int minEatingSpeed(vector<int>& piles, int h) {
        int lo=1,hi,mid;
        hi=*max_element(piles.begin(),piles.end());
        while(hi>lo){
            mid=(hi+lo)/2;
            if(isSufficient(piles,mid)<=h){
                hi=mid;
            }else{
                lo=mid+1;
            }
        }
        return lo;
    }
};
