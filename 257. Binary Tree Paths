/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> a;
    void stringDe(TreeNode* root,string s){
        if(root==NULL){
            return;
        }
        if(s!=""){

        s=s+"->"+to_string(root->val);
        }else{
            s=to_string(root->val);
        }
        if(root->left== NULL && root->right==NULL){
            a.push_back(s);
        }
        stringDe(root->left,s);
        stringDe(root->right,s);
        return;
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        stringDe(root,"");
        return a;
    }
};
